--Clase 7

--1) Calcular el porcentaje de valores null de la tabla stg.order_line_sale para la columna creditos y descuentos. 
--(porcentaje de nulls en cada columna)
 
SELECT AVG(CASE WHEN ols.orden  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.producto  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.tienda  IS NULL THEN 1 ELSE 0 END 
        + CASE WHEN ols.fecha  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.cantidad  IS NULL THEN 1 ELSE 0 end
        + CASE WHEN ols.venta  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.descuento  IS NULL THEN 1 ELSE 0 end
        + CASE WHEN ols.impuestos  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.creditos IS NULL THEN 1 ELSE 0 end
        + CASE WHEN ols.moneda  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.pos IS NULL THEN 1 ELSE 0 end
        + CASE WHEN ols.is_walkout  IS NULL THEN 1 ELSE 0 END
        + CASE WHEN ols.line_key IS NULL THEN 1 ELSE 0 END) as porcentaje_null
FROM stg.order_line_sale ols 

--2) La columna "is_walkout" se refiere a los clientes que llegaron a la tienda y se fueron con el producto en la mano 
--(es decir habia stock disponible). Responder en una misma query:
--Cuantas ordenes fueron "walkout" por tienda?
--Cuantas ventas brutas en USD fueron "walkout" por tienda?
--Cual es el porcentaje de las ventas brutas "walkout" sobre el total de ventas brutas por tienda?
with is_walkout as(
select
	tienda,
	moneda, 
	count(distinct orden) as ordenes, 
	sum(venta) as venta_bruta_iw
from stg.order_line_sale ols 
where ols.is_walkout is true
group by tienda, moneda
),
ventas_brutas as (
select 
	tienda,
	moneda,
 	sum(ols.venta) as ventas_brutas
from stg.order_line_sale ols 
group by tienda, moneda
)
select 
		iw.tienda,
		venta_bruta_iw/ventas_brutas as porcentaje_vb
from is_walkout as iw
left join ventas_brutas as vb 
on iw.tienda = vb.tienda
group by iw.tienda, venta_bruta_iw, ventas_brutas

--3) Siguiendo el nivel de detalle de la tabla ventas, hay una orden que no parece cumplirlo. Como identificarias duplicados utilizando 
--una windows function? Nota: Esto hace referencia a la orden M999000061. Tenes que generar una forma de excluir los casos duplicados, 
--para este caso particular y a nivel general, si llegan mas ordenes con duplicaciones.
select 
	orden,
	row_number () over (partition by orden) as cantidad
from stg.order_line_sale ols 

--4) Obtener las ventas totales en USD de productos que NO sean de la categoria "TV" NI esten en tiendas de Argentina.
with  stg_cotizacion as (
select
	*,
	case 
		when moneda = 'ARS' then mafr.cotizacion_usd_peso 
		when moneda = 'URU' then mafr.cotizacion_usd_uru
		when moneda = 'EUR' then mafr.cotizacion_usd_peso
		end as dolar	 
 from stg.order_line_sale ols 
 left join stg."cost" c 
 on ols.producto  = c.codigo_producto 
 left join stg.monthly_average_fx_rate mafr 
 on date(date_trunc('month', ols.fecha)) = mafr.mes 
 ),
 stg_ventaneta as (
	select c.producto, (sum(ols.venta/dolar) - sum (coalesce (ols.descuento/dolar, 0)) - sum (ols.impuestos/dolar) ) as venta_neta
	from stg.order_line_sale ols
	inner join stg_cotizacion c on c.producto = ols.producto 
	group by c.producto
) 

select 
	pm.codigo_producto,
	vn.venta_neta
from  stg_ventaneta as vn
left join stg.product_master as pm 
on vn.producto = pm.codigo_producto 
where pm.categoria != 'TV' and pm.origen != 'Argentina'

--6)Crear una vista de inventario con la cantidad de inventario por dia, tienda y producto, que ademas va a contar con los siguientes datos:
--Nombre y categorias de producto
--Pais y nombre de tienda
--Costo del inventario por linea (recordar que si la linea dice 4 unidades debe reflejar el costo total de esas 4 unidades)
--Una columna llamada "is_last_snapshot" para el ultimo dia disponible de inventario.
--Ademas vamos a querer calcular una metrica llamada "Average days on hand (DOH)" que mide cuantos dias de venta nos alcanza el 
--inventario. Para eso DOH = Unidades en Inventario Promedio / Promedio diario Unidades vendidas ultimos 7 dias.
--Notas:
--Antes de crear la columna DOH, conviene crear una columna que refleje el Promedio diario Unidades vendidas ultimos 7 dias.
--El nivel de agregacion es dia/tienda/sku.
--El Promedio diario Unidades vendidas ultimos 7 dias tiene que calcularse para cada dia.
create view view_inventory as (
select 
	i.fecha, 
	i.tienda, 
	i.sku, 
	pm.nombre, 
	pm.categoria, 
	coalesce (sum(c.costo_promedio_usd), 0),
	as is_last_snapshot
from stg.inventory i 
left join stg.product_master pm 
on i.sku = pm.codigo_producto 
left join stg."cost" c 
on c.codigo_producto = i.sku 
group by i.fecha, i.tienda, i.sku, pm.nombre, pm.categoria, c.costo_promedio_usd;
)

